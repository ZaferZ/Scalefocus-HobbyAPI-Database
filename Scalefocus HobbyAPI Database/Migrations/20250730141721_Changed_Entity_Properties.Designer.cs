// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Scalefocus_HobbyAPI_Database.Data;

#nullable disable

namespace Scalefocus_HobbyAPI_Database.Migrations
{
    [DbContext(typeof(ScalefocusDbContext))]
    [Migration("20250730141721_Changed_Entity_Properties")]
    partial class Changed_Entity_Properties
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Scalefocus_HobbyAPI_Database.Models.CommentEntity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<int>("EventId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("UserId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.ToTable("Comments");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Looking forward to this event!",
                            CreatedAt = new DateTime(2024, 6, 2, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            UserId = new Guid("3bae1d94-7392-477e-922e-e656a8597661")
                        },
                        new
                        {
                            Id = 2,
                            Content = "Count me in!",
                            CreatedAt = new DateTime(2024, 6, 3, 11, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 1,
                            UserId = new Guid("7e61f925-b7d6-4e69-bbc2-a6695e2e424f")
                        },
                        new
                        {
                            Id = 3,
                            Content = "Excited to learn painting.",
                            CreatedAt = new DateTime(2024, 7, 12, 12, 0, 0, 0, DateTimeKind.Unspecified),
                            EventId = 2,
                            UserId = new Guid("7e61f925-b7d6-4e69-bbc2-a6695e2e424f")
                        });
                });

            modelBuilder.Entity("Scalefocus_HobbyAPI_Database.Models.Event", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("CreatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModifiedAt")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ModifiedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("OwnerId")
                        .HasColumnType("uniqueidentifier");

                    b.PrimitiveCollection<string>("ParticipantIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CreatedBy");

                    b.HasIndex("ModifiedBy");

                    b.HasIndex("OwnerId");

                    b.ToTable("Events");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 20,
                            CreatedAt = new DateTime(2024, 6, 1, 9, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("3bae1d94-7392-477e-922e-e656a8597661"),
                            Description = "A friendly chess tournament.",
                            EndDate = new DateTime(2024, 7, 1, 18, 0, 0, 0, DateTimeKind.Unspecified),
                            HobbyId = 1,
                            Location = "Community Center",
                            OwnerId = new Guid("3bae1d94-7392-477e-922e-e656a8597661"),
                            StartDate = new DateTime(2024, 7, 1, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Title = "Chess Tournament"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 15,
                            CreatedAt = new DateTime(2024, 7, 10, 10, 0, 0, 0, DateTimeKind.Unspecified),
                            CreatedBy = new Guid("7e61f925-b7d6-4e69-bbc2-a6695e2e424f"),
                            Description = "Learn to paint with watercolors.",
                            EndDate = new DateTime(2024, 8, 15, 17, 0, 0, 0, DateTimeKind.Unspecified),
                            HobbyId = 2,
                            Location = "Art Studio",
                            OwnerId = new Guid("7e61f925-b7d6-4e69-bbc2-a6695e2e424f"),
                            StartDate = new DateTime(2024, 8, 15, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Status = 0,
                            Title = "Painting Workshop"
                        });
                });

            modelBuilder.Entity("Scalefocus_HobbyAPI_Database.Models.Hobbies", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Updated_at")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Date = new DateTime(2024, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Chess",
                            Updated_at = 20240101
                        },
                        new
                        {
                            Id = 2,
                            Date = new DateTime(2024, 2, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Title = "Painting",
                            Updated_at = 20240201
                        });
                });

            modelBuilder.Entity("Scalefocus_HobbyAPI_Database.Models.User", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = new Guid("3bae1d94-7392-477e-922e-e656a8597661"),
                            Email = "alice.smith@example.com",
                            FirstName = "Alice",
                            LastName = "Smith",
                            PasswordHash = "hash1",
                            Username = "alice123"
                        },
                        new
                        {
                            Id = new Guid("7e61f925-b7d6-4e69-bbc2-a6695e2e424f"),
                            Email = "bob.johnson@example.com",
                            FirstName = "Bob",
                            LastName = "Johnson",
                            PasswordHash = "hash2",
                            Username = "bob456"
                        });
                });

            modelBuilder.Entity("Scalefocus_HobbyAPI_Database.Models.Event", b =>
                {
                    b.HasOne("Scalefocus_HobbyAPI_Database.Models.User", null)
                        .WithMany()
                        .HasForeignKey("CreatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("Scalefocus_HobbyAPI_Database.Models.User", null)
                        .WithMany()
                        .HasForeignKey("ModifiedBy")
                        .OnDelete(DeleteBehavior.Restrict);

                    b.HasOne("Scalefocus_HobbyAPI_Database.Models.User", null)
                        .WithMany()
                        .HasForeignKey("OwnerId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
